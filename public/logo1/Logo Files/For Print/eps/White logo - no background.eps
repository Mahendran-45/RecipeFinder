%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 22.05.0 (http://poppler.freedesktop.org)
%%Creator: Chromium
%%LanguageLevel: 3
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 2440 1154
%%HiResBoundingBox: 0 0 2439.1199 1153.91992
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011, 2022 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfOPM false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/opm { dup /pdfOPM exch def
      /setoverprintmode where{pop setoverprintmode}{pop}ifelse  } def
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16L3 {
  1 index /CIDFont resourcestatus {
    pop pop 1 index /CIDFont findresource /CIDFontType known
  } {
    false
  } ifelse
  {
    0 eq { /Identity-H } { /Identity-V } ifelse
    exch 1 array astore composefont pop
  } {
    pdfMakeFont16
  } ifelse
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
  /pdfOPM where {
    pop
    pdfOPM /setoverprintmode where{pop setoverprintmode}{pop}ifelse 
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfMask {
  /ReusableStreamDecode filter
  skipEOD
  /maskStream exch def
} def
/pdfMaskEnd { maskStream closefile } def
/pdfMaskInit {
  /maskArray exch def
  /maskIdx 0 def
} def
/pdfMaskSrc {
  maskIdx maskArray length lt {
    maskArray maskIdx get
    /maskIdx maskIdx 1 add def
  } {
    ()
  } ifelse
} def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
/CIDInit /ProcSet findresource begin
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-H def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-V def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  /WMode 1 def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
end
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 2439.1199 1153.91992 re
W
q
[0.24 0 0 -0.24 0 1153.91992] cm
q
0 0 10162.5 4806.25 re
W*
q
[40.26646 0 0 40.267876 -9993.3467 394.74417] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
290.065 35.554001 m
289.526 35.554001 289.12701 35.847 288.884 36.094002 c
288.28799 36.698002 287.935 37.691002 287.93799 38.752003 c
287.94098 40.523003 288.939 41.974003 290.16299 41.985004 c
290.17499 42.479004 l
290.17599 41.985004 l
290.62201 41.985004 291.04999 41.787003 291.41199 41.414005 c
291.98898 40.817005 292.31998 39.848007 292.29797 38.820004 c
292.26199 37.064999 291.23901 35.569 290.065 35.554001 c
h
f
267.11801 36.141998 m
265.81201 36.224998 264.68802 37.750999 264.56802 39.477997 c
264.50201 40.435997 264.76001 41.306995 265.27802 41.867996 c
265.61401 42.232998 266.02802 42.425995 266.47501 42.425995 c
266.47501 42.911995 l
266.47601 42.911995 l
266.543 42.423996 l
267.772 42.366997 268.845 40.885998 268.93201 39.124996 c
268.98102 38.118996 268.70001 37.187996 268.17999 36.635998 c
267.96899 36.410999 267.61099 36.141998 267.11801 36.141998 c
h
f
295.88699 35.608002 m
295.931 36.098003 l
295.93201 36.098003 295.93201 36.098003 295.93201 36.098003 c
295.93201 35.609005 l
296.46201 35.609005 296.84702 35.317005 297.077 35.073006 c
297.617 34.496006 297.90698 33.544006 297.85199 32.528008 c
297.754 30.760008 296.69897 29.228008 295.54599 29.181007 c
295.54498 29.181007 295.543 29.181007 295.54199 29.181007 c
295.022 29.181007 294.672 29.444008 294.45999 29.665007 c
293.901 30.246006 293.58499 31.231007 293.61301 32.302006 c
293.664 34.087002 294.68399 35.570999 295.88699 35.608002 c
h
f
284.02899 29.000999 m
282.88498 29.012999 281.89499 30.514999 281.85599 32.279999 c
281.83298 33.330997 282.16299 34.315998 282.74197 34.916 c
282.98499 35.167 283.38797 35.466 283.92697 35.466 c
283.92697 35.960999 l
283.93698 35.466 l
285.13199 35.459 286.10199 34.006001 286.09698 32.228001 c
286.09 30.479 285.14401 29.000999 284.02899 29.000999 c
h
f
296.01999 42.155998 m
296.01898 42.155998 296.01898 42.155998 296.01797 42.155998 c
295.44098 42.155998 295.03598 42.453999 294.79099 42.703999 c
294.21399 43.293999 293.87598 44.264 293.88797 45.296997 c
293.90997 47.063995 294.92996 48.515999 296.16196 48.533997 c
296.18796 49.026997 l
296.18796 48.534996 l
296.64996 48.534996 297.08896 48.331997 297.45895 47.949997 c
298.02695 47.362995 298.35196 46.418999 298.32895 45.424995 c
298.29001 43.681999 297.23199 42.185001 296.01999 42.155998 c
h
f
273.24799 29.360001 m
272.00897 29.431 270.91898 30.977001 270.79498 32.737999 c
270.72198 33.729 270.98798 34.655998 271.50699 35.219997 c
271.82498 35.567997 272.216 35.750996 272.63498 35.750996 c
272.63498 36.236996 l
272.63599 36.236996 l
272.698 35.748997 l
273.90601 35.698997 274.95099 34.203995 275.03101 32.415997 c
275.077 31.361996 274.785 30.394997 274.25 29.829996 c
274.04599 29.617001 273.70801 29.360001 273.24799 29.360001 c
h
f
278.233 35.636002 m
277.009 35.669003 275.95599 37.179001 275.89499 38.932003 c
275.862 39.939003 276.177 40.891003 276.73798 41.478004 c
277.09396 41.850006 277.51797 42.047005 277.96698 42.047005 c
277.96597 42.538006 l
277.99496 42.046005 l
279.21695 42.023006 280.23196 40.559006 280.25897 38.784004 c
280.27496 37.732002 279.94098 36.751003 279.36496 36.160004 c
279.13199 35.921001 278.745 35.636002 278.233 35.636002 c
h
f
317.47101 57.132 m
316.94101 55.932999 316.013 54.880001 314.86502 54.040001 c
318.26001 47.012001 318.82001 39.600002 315.30701 30.604 c
312.578 23.616001 306.76199 21.014999 301.07602 20.608 c
301.10501 20.610001 301.13501 20.608999 301.16403 20.611 c
304.08502 17.440001 305.87802 13.217 305.87802 8.564 c
301.55603 8.564 297.59503 10.101 294.50803 12.656 c
294.52203 8.072001 292.78201 3.484 289.28503 -0.013 c
285.78802 3.485 284.04904 8.073001 284.06204 12.657001 c
280.97403 10.101001 277.01205 8.563001 272.69104 8.563001 c
272.69104 13.217001 274.48404 17.439001 277.40503 20.610001 c
277.43402 20.608 277.46304 20.609001 277.49103 20.607 c
271.80402 21.014999 265.98901 23.615 263.26202 30.603001 c
260.82703 36.834 260.34702 42.305 261.40701 47.415001 c
260.12402 48.380001 259.164 49.514999 258.58902 50.816002 c
257.53003 53.212002 257.31003 57.211002 262.26801 62.654003 c
263.103 63.570004 263.927 64.481003 264.74402 65.383003 c
265.68903 66.427002 266.61801 67.451004 267.53802 68.458 c
265.49603 71.148003 264.21204 76.483002 264.21204 78.598999 c
264.21204 81.904999 266.90204 84.593002 270.20905 84.593002 c
273.51605 84.593002 276.20605 81.904999 276.20605 78.598999 c
276.20605 78.234001 276.16406 77.764999 276.09106 77.237 c
280.77606 81.526001 285.17407 84.344002 289.43506 84.344002 c
292.77005 84.344002 296.18906 82.615005 299.76306 79.810005 c
299.76306 83.384003 l
297.61407 85.985001 296.25406 91.589005 296.25406 93.768005 c
296.25406 97.075005 298.94305 99.764008 302.24905 99.764008 c
305.55606 99.764008 308.24506 97.075005 308.24506 93.768005 c
308.24506 91.580002 306.87207 85.934006 304.70605 83.347008 c
304.59805 82.28701 304.26004 77.521011 306.26407 73.848007 c
308.79407 71.268005 311.41107 68.382004 314.14008 65.366005 c
314.95108 64.470001 315.76907 63.565006 316.59808 62.655006 c
318.01401 61.097 318.33301 59.083 317.47101 57.132 c
h
313.38199 49.798 m
312.98898 49.387001 312.513 49.121002 312.00198 49.098 c
312.00098 49.098 311.99698 49.098 311.99597 49.098 c
311.48196 49.098 311.06396 49.286999 310.71597 49.645 c
310.16397 50.207001 309.85397 51.091999 309.86298 52.07 c
309.86298 52.089001 309.86697 52.105999 309.86798 52.125 c
309.54697 52.09 309.22299 52.067001 308.89899 52.067001 c
307.28799 52.067001 305.047 52.488003 302.78299 54.170002 c
303.23199 53.586002 303.49298 52.799004 303.48398 51.936001 c
303.46896 50.228001 302.41898 48.754002 301.18799 48.720001 c
301.18799 48.720001 301.18799 48.720001 301.18698 48.720001 c
300.69998 48.720001 300.27298 48.915001 299.91098 49.284 c
299.33798 49.866001 298.99899 50.814999 299.00497 51.823002 c
299.01498 53.573002 300.02597 55.009003 301.25897 55.024002 c
301.27896 55.479004 l
301.23996 55.519005 301.19897 55.549004 301.15997 55.591003 c
300.11298 56.688004 299.17697 57.236004 298.29999 57.297005 c
298.01999 56.025005 297.16998 55.060005 296.177 55.049004 c
295.737 55.049004 295.32901 55.235004 294.983 55.545002 c
294.23401 54.819 293.457 53.939003 292.63199 52.996002 c
292.53699 52.889004 292.439 52.775002 292.34198 52.666 c
292.40497 52.372002 292.44797 52.07 292.44699 51.757999 c
292.44 50.024998 291.40799 48.551998 290.19098 48.542999 c
289.74399 48.542999 289.31897 48.737 288.95599 49.089001 c
288.026 48.222 287.004 47.390999 285.88 46.648003 c
286.02499 46.224003 286.112 45.755001 286.11099 45.253002 c
286.10898 43.513 285.103 42.043003 283.91299 42.043003 c
282.867 42.049004 281.95999 43.166004 281.72598 44.603004 c
280.10498 44.063004 278.30798 43.741005 276.29498 43.741005 c
275.62198 43.741005 274.96799 43.758003 274.32498 43.785004 c
274.17798 43.407005 273.98398 43.068005 273.73398 42.810005 c
273.49496 42.564007 273.09598 42.270004 272.56097 42.270004 c
271.65598 42.301003 270.85696 43.076004 270.44998 44.142006 c
268.047 44.490005 265.92899 45.057007 264.15997 45.835007 c
263.42398 41.341007 264.07297 36.770008 266.05597 31.696007 c
266.34897 30.945007 266.68896 30.270006 267.05798 29.646008 c
267.13998 29.663008 267.22397 29.674007 267.31097 29.674007 c
267.41599 29.670008 l
268.53897 29.582008 269.612 28.115007 269.827 26.427008 c
272.082 24.621008 274.77399 23.864008 277.26199 23.631008 c
276.83899 24.251009 276.54498 25.089008 276.491 25.971008 c
276.427 27.008009 276.70801 27.972008 277.24301 28.548008 c
277.45901 28.780008 277.819 29.057009 278.31403 29.057009 c
278.31403 29.546009 l
278.31503 29.546009 l
278.35904 29.057009 l
279.50504 29.019009 280.51205 27.50001 280.55905 25.739008 c
280.58005 24.918009 280.41104 24.151009 280.09204 23.573008 c
283.39703 23.718008 286.24103 24.583008 287.89203 25.411007 c
287.88803 25.505007 287.87103 25.594007 287.87103 25.689007 c
287.87802 27.443007 288.84802 28.940006 289.98804 28.959007 c
290.01004 29.451008 l
290.01004 28.959007 l
290.50903 28.959007 290.88104 28.678007 291.10605 28.442007 c
291.66806 27.850006 291.97903 26.862007 291.93805 25.800007 c
291.92606 25.493008 291.87906 25.199007 291.81705 24.914007 c
293.53503 24.248007 295.94104 23.664007 298.65506 23.567007 c
298.23605 24.136007 298.01407 25.003008 298.07507 25.970007 c
298.18607 27.735006 299.26108 29.283007 300.41907 29.350006 c
300.49808 29.352007 l
300.98108 29.352007 301.32007 29.087008 301.51907 28.865007 c
302.01108 28.316008 302.24606 27.389008 302.14807 26.388008 c
302.04007 25.286009 301.55307 24.243008 300.93207 23.601007 c
303.28607 23.774008 305.85507 24.401007 308.08307 25.937008 c
308.07108 26.192007 308.07706 26.458008 308.11108 26.736008 c
308.33209 28.513008 309.48108 30.058008 310.67508 30.180008 c
310.72208 30.185007 310.77008 30.187008 310.81607 30.187008 c
311.13007 30.187008 311.40106 30.073008 311.62906 29.862007 c
311.94907 30.428007 312.25006 31.029007 312.51105 31.695007 c
315.077 38.264999 315.41199 43.992001 313.38199 49.798 c
h
f
300.71301 35.881001 m
300.711 35.881001 300.71002 35.881001 300.70801 35.881001 c
300.138 35.881001 299.76901 36.157001 299.548 36.389 c
299.004 36.958 298.70102 37.910999 298.737 38.938 c
298.797 40.709 299.84601 42.183998 301.077 42.227001 c
301.13 42.716 l
301.13101 42.716 l
301.13101 42.228001 l
301.57401 42.228001 301.98901 42.035 302.332 41.668999 c
302.86401 41.100998 303.14999 40.18 303.09799 39.204998 c
303.004 37.460999 301.91199 35.939999 300.71301 35.881001 c
h
f
311.18201 36.570999 m
311.14102 36.568001 311.10001 36.565998 311.05902 36.565998 c
310.67603 36.565998 310.32101 36.730999 310.03302 37.042999 c
309.54401 37.571999 309.29102 38.468998 309.35602 39.441998 c
309.47501 41.186996 310.578 42.666996 311.811 42.738998 c
311.90399 42.740997 l
312.35199 42.740997 312.759 42.551998 313.08398 42.192997 c
313.57098 41.653996 313.80298 40.818996 313.72198 39.902996 c
313.57001 38.202999 312.40799 36.677002 311.18201 36.570999 c
h
f
306.88901 42.564999 m
306.88602 42.564999 306.884 42.564999 306.88101 42.564999 c
306.38303 42.564999 305.987 42.746998 305.65701 43.091 c
305.12003 43.651001 304.81702 44.577 304.84601 45.57 c
304.89999 47.317001 305.953 48.769001 307.194 48.810001 c
307.24399 49.299 l
307.245 49.299 l
307.245 48.810001 l
307.71201 48.810001 308.14899 48.609001 308.51001 48.227001 c
309.048 47.659 309.33401 46.787003 309.293 45.835003 c
309.22299 44.127998 308.12201 42.631001 306.88901 42.564999 c
h
f
306.60599 36.125 m
306.69897 36.127998 l
307.11197 36.127998 307.48898 35.949997 307.78897 35.612999 c
308.27597 35.066998 308.49896 34.202 308.39996 33.238998 c
308.22098 31.495998 307.07196 29.936998 305.88797 29.833998 c
305.84897 29.830997 305.81097 29.828999 305.77298 29.828999 c
305.41599 29.828999 305.09598 29.979998 304.82397 30.276999 c
304.33096 30.813999 304.08096 31.741999 304.15497 32.758999 c
304.28799 34.536999 305.388 36.047001 306.60599 36.125 c
h
f
Q
q
[51.167442 0 0 51.169235 3488.0032 1642.54761] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
6.16 12.08 m
7.186667 12.08 7.98 11.849999 8.54 11.389999 c
9.1 10.929999 9.38 10.319999 9.38 9.56 c
9.38 8.8 9.106667 8.193334 8.56 7.74 c
8.013334 7.286666 7.200001 7.053333 6.12 7.04 c
3.26 7.04 l
3.26 12.08 l
6.16 12.08 l
6.16 12.08 l
h
5.76 5.84 m
9.026667 5.84 10.673333 7.08 10.700001 9.56 c
10.700001 11.653334 9.493334 12.866668 7.080001 13.200001 c
11.200001 20 l
9.700001 20 l
5.720001 13.280001 l
3.260001 13.280001 l
3.260001 20 l
1.940001 20 l
1.940001 5.84 l
5.760001 5.84 l
5.76 5.84 l
h
20.700001 14.6 m
20.700001 13.76 20.386667 13.05 19.76 12.47 c
19.133333 11.89 18.373333 11.6 17.48 11.6 c
16.613333 11.6 15.866667 11.89 15.24 12.47 c
14.613333 13.05 14.246666 13.76 14.139999 14.6 c
20.699999 14.6 l
20.700001 14.6 l
h
17.559999 10.520001 m
18.84 10.520001 19.879999 10.933333 20.68 11.76 c
21.480001 12.586667 21.886667 13.653334 21.9 14.96 c
21.9 15.68 l
14.139999 15.68 l
14.193333 16.719999 14.536666 17.556667 15.169999 18.190001 c
15.803332 18.823334 16.626665 19.146667 17.639999 19.16 c
18.266666 19.16 18.863333 19.01 19.43 18.709999 c
19.996668 18.409998 20.433334 18.013332 20.74 17.519999 c
21.619999 18.259998 l
20.753332 19.579998 19.42 20.239998 17.619999 20.239998 c
16.206665 20.226664 15.076666 19.766665 14.229999 18.859999 c
13.383331 17.953333 12.953332 16.786667 12.939999 15.359999 c
12.939999 13.973332 13.376665 12.823332 14.249998 11.909999 c
15.123331 10.996666 16.226664 10.533332 17.559998 10.519999 c
17.559999 10.520001 l
h
28.92 10.520001 m
30.253334 10.520001 31.4 11.053334 32.360001 12.120001 c
31.400002 12.840001 l
30.626669 12.013334 29.793335 11.600001 28.900002 11.600001 c
27.860003 11.600001 26.996668 11.953335 26.310001 12.660002 c
25.623335 13.366669 25.273335 14.273336 25.260002 15.380002 c
25.260002 16.486669 25.606668 17.390003 26.300003 18.090002 c
26.993338 18.790001 27.860004 19.146667 28.900003 19.160002 c
29.886669 19.160002 30.720003 18.733335 31.400003 17.880001 c
32.320004 18.640001 l
31.42667 19.693335 30.293337 20.226667 28.920004 20.240002 c
27.520004 20.240002 26.366671 19.786669 25.460003 18.880001 c
24.553335 17.973333 24.08667 16.806667 24.060003 15.380001 c
24.060003 14.006668 24.510004 12.860002 25.410004 11.940001 c
26.310003 11.02 27.480003 10.546666 28.920004 10.520001 c
28.92 10.520001 l
h
34.400002 10.76 m
35.600002 10.76 l
35.600002 20 l
34.400002 20 l
34.400002 10.76 l
h
35 6.2 m
35.266666 6.2 35.483334 6.286666 35.650002 6.46 c
35.816669 6.633334 35.900002 6.846667 35.900002 7.1 c
35.900002 7.353333 35.816669 7.566666 35.650002 7.74 c
35.483334 7.913333 35.266666 8 35 8 c
34.746666 8 34.533333 7.913333 34.360001 7.74 c
34.186668 7.566666 34.100002 7.353333 34.100002 7.1 c
34.100002 6.846667 34.186668 6.633334 34.360001 6.46 c
34.533333 6.286666 34.746666 6.2 35 6.2 c
h
39.82 15.38 m
39.82 16.433332 40.193333 17.32 40.939999 18.040001 c
41.686665 18.760002 42.599998 19.133335 43.68 19.160002 c
44.759998 19.160002 45.636665 18.803335 46.310001 18.090002 c
46.983337 17.376669 47.326668 16.473335 47.34 15.380002 c
47.34 14.313335 47.006668 13.420002 46.34 12.700002 c
45.673332 11.980001 44.779999 11.613335 43.66 11.600001 c
42.580002 11.600001 41.673332 11.966668 40.939999 12.700002 c
40.206665 13.433335 39.833332 14.326669 39.82 15.380002 c
39.82 15.38 l
h
43.68 10.520001 m
45.093334 10.520001 46.253334 10.976667 47.16 11.89 c
48.066666 12.803333 48.526669 13.966667 48.540001 15.38 c
48.540001 16.793333 48.086666 17.953333 47.18 18.860001 c
46.273335 19.766668 45.106667 20.226667 43.68 20.24 c
42.893333 20.24 42.163334 20.073334 41.490002 19.74 c
40.816669 19.406666 40.313335 18.953333 39.980003 18.379999 c
39.940002 18.379999 l
39.940002 24.559999 l
38.740002 24.559999 l
38.740002 10.759999 l
39.940002 10.759999 l
39.940002 12.379999 l
39.980003 12.379999 l
40.300003 11.819999 40.800003 11.369999 41.480003 11.029999 c
42.160004 10.689999 42.893337 10.519999 43.680004 10.519999 c
43.68 10.520001 l
h
58.459999 14.6 m
58.459999 13.76 58.146667 13.05 57.52 12.47 c
56.893333 11.89 56.133335 11.6 55.240002 11.6 c
54.373337 11.6 53.626667 11.89 53 12.47 c
52.373333 13.05 52.006664 13.76 51.900002 14.6 c
58.460003 14.6 l
58.459999 14.6 l
h
55.32 10.520001 m
56.599998 10.520001 57.639999 10.933333 58.439999 11.76 c
59.239998 12.586667 59.646667 13.653334 59.66 14.96 c
59.66 15.68 l
51.900002 15.68 l
51.953335 16.719999 52.296669 17.556667 52.93 18.190001 c
53.563332 18.823334 54.386665 19.146667 55.400002 19.16 c
56.026669 19.16 56.623333 19.01 57.190002 18.709999 c
57.756672 18.409998 58.193336 18.013332 58.500004 17.519999 c
59.380005 18.259998 l
58.51334 19.579998 57.180004 20.239998 55.380005 20.239998 c
53.966671 20.226664 52.836674 19.766665 51.990005 18.859999 c
51.143337 17.953333 50.713337 16.786667 50.700005 15.359999 c
50.700005 13.973332 51.136673 12.823332 52.010006 11.909999 c
52.883339 10.996666 53.986675 10.533332 55.320007 10.519999 c
55.32 10.520001 l
h
76.360001 5.84 m
76.360001 7.04 l
69.199997 7.04 l
69.199997 12.08 l
75.860001 12.08 l
75.860001 13.28 l
69.199997 13.28 l
69.199997 20 l
67.879997 20 l
67.879997 5.84 l
76.360001 5.84 l
h
78.860001 10.76 m
80.059998 10.76 l
80.059998 20 l
78.860001 20 l
78.860001 10.76 l
h
79.459999 6.2 m
79.726669 6.2 79.943336 6.286666 80.110001 6.46 c
80.276665 6.633334 80.360001 6.846667 80.360001 7.1 c
80.360001 7.353333 80.276665 7.566666 80.110001 7.74 c
79.943336 7.913333 79.726669 8 79.459999 8 c
79.206665 8 78.993332 7.913333 78.82 7.74 c
78.646667 7.566666 78.559998 7.353333 78.559998 7.1 c
78.559998 6.846667 78.646667 6.633334 78.82 6.46 c
78.993332 6.286666 79.206665 6.2 79.459999 6.2 c
h
87.860001 10.520001 m
89.060005 10.520001 89.943336 10.843334 90.510002 11.490001 c
91.076668 12.136667 91.366669 13.153335 91.380005 14.540001 c
91.380005 20 l
90.180008 20 l
90.180008 14.6 l
90.180008 13.573334 89.990005 12.816667 89.610008 12.33 c
89.230011 11.843333 88.646675 11.599999 87.860008 11.6 c
86.886673 11.6 86.113342 11.936667 85.540009 12.610001 c
84.966675 13.283334 84.67334 14.22 84.660011 15.42 c
84.660011 20 l
83.460014 20 l
83.460014 13.26 l
83.446686 12.873334 83.413353 12.04 83.360016 10.76 c
84.560013 10.76 l
84.586678 11.813334 84.61335 12.353334 84.640015 12.38 c
84.700012 12.38 l
84.966682 11.82 85.390015 11.37 85.970009 11.03 c
86.550003 10.69 87.180008 10.52 87.860008 10.52 c
87.860001 10.520001 l
h
95.260002 15.38 m
95.260002 16.486668 95.606667 17.393333 96.300003 18.1 c
96.99334 18.806667 97.866669 19.16 98.920006 19.16 c
99.960007 19.16 100.856674 18.803333 101.610008 18.09 c
102.363342 17.376667 102.753342 16.473333 102.780006 15.38 c
102.780006 14.34 102.410004 13.453333 101.670006 12.72 c
100.930008 11.986668 100.006676 11.613334 98.900009 11.6 c
97.860008 11.6 96.996681 11.953334 96.310013 12.66 c
95.623344 13.366666 95.273346 14.273333 95.26001 15.38 c
95.260002 15.38 l
h
102.660004 4.88 m
103.860001 4.88 l
103.860001 20 l
102.660004 20 l
102.660004 18.379999 l
102.620003 18.379999 l
102.286667 18.966665 101.776672 19.423332 101.090004 19.75 c
100.403336 20.076668 99.680008 20.240002 98.920006 20.24 c
97.546677 20.24 96.400009 19.789999 95.480003 18.889999 c
94.559998 17.99 94.08667 16.82 94.060005 15.379999 c
94.060005 14.006666 94.510002 12.86 95.410004 11.939999 c
96.310005 11.019998 97.480003 10.546664 98.920006 10.519999 c
99.706673 10.519999 100.433342 10.683332 101.100006 11.009998 c
101.76667 11.336665 102.273338 11.793331 102.620003 12.379998 c
102.660004 12.379998 l
102.660004 4.879998 l
102.660004 4.88 l
h
114.040001 14.6 m
114.040001 13.76 113.726669 13.05 113.099998 12.47 c
112.473328 11.89 111.713333 11.6 110.82 11.6 c
109.953331 11.6 109.206665 11.89 108.580002 12.47 c
107.953339 13.05 107.58667 13.76 107.480003 14.6 c
114.040001 14.6 l
h
110.900002 10.520001 m
112.18 10.520001 113.220001 10.933333 114.020004 11.76 c
114.820007 12.586667 115.226677 13.653334 115.240005 14.96 c
115.240005 15.68 l
107.480003 15.68 l
107.53334 16.719999 107.876671 17.556667 108.510002 18.190001 c
109.143333 18.823334 109.966667 19.146667 110.980003 19.16 c
111.606674 19.16 112.203339 19.01 112.770004 18.709999 c
113.33667 18.409998 113.773338 18.013332 114.080002 17.519999 c
114.959999 18.259998 l
114.09333 19.579998 112.759995 20.239998 110.959999 20.239998 c
109.546661 20.226664 108.416664 19.766665 107.57 18.859999 c
106.723335 17.953333 106.293335 16.786667 106.279999 15.359999 c
106.279999 13.973332 106.716667 12.823332 107.589996 11.909999 c
108.463326 10.996666 109.566658 10.533332 110.899994 10.519999 c
110.900002 10.520001 l
h
122.040001 10.520001 m
122.266663 10.520001 122.5 10.553334 122.739998 10.620001 c
122.599998 11.800001 l
122.453331 11.746668 122.293327 11.720001 122.119995 11.720001 c
121.14666 11.720001 120.403328 12.020001 119.889992 12.620001 c
119.376656 13.22 119.119987 14.000001 119.119995 14.960001 c
119.119995 20 l
117.919998 20 l
117.919998 13.26 l
117.919998 13.126667 117.886665 12.293334 117.82 10.76 c
119.019997 10.76 l
119.046661 11.68 119.073334 12.22 119.099998 12.38 c
119.793335 11.14 120.773331 10.520001 122.040001 10.520001 c
h
f
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
